#!/bin/zsh

gen.cores ()
{
	unset cursor background foreground color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color 11 color12 color13 color14 color15 color16 color17 color18 selection_foreground selection_background 
	while read line ;do
		<<< "declare -x ${line// /=}"
	done < $base_file > /tmp/themetest
	cp /tmp/themetest $shell_file
	
	. $shell_file
		
	print "base00 = \"$background\"\nbase01 = \"$color1\"\nbase02 = \"$color2\"\nbase03 = \"$color3\"\nbase04 = \"$color4\"\nbase05 = \"$color5\"\nbase06 = \"$color6\"\nbase07 = \"$color7\"\nbase08 = \"$color8\"\nbase09 = \"$color9\"\nbase0A = \"$color10\"\nbase0B = \"$color11\"\nbase0C = \"$color12\"\nbase0D = \"$color13\"\nbase0E = \"$color14\"\nbase0F = \"$color15\"" > /hdbkp/dots/qutebrowser/colors.py

	rm /tmp/themetest
}

gen.kitty ()
{
	cp $base_file $kitty_file || print -p "%F{white}K%{green}%B Erro ao copiar $base_file para $kitty_file"
}

gen.html ()
{
    sed -i  's/--color: #.*/--color: '$color8';/;s/--bg-color: #.*/--bg-color: '$background';/' /hdbkp/projetos/web/HTML/index.html
    # sed -i 's/--bg-color: #.*/--bg-color: '$color8';/' /hdbkp/projetos/web/HTML/index.html
}

gen.notify ()
{
	. $shell_file
	#sed -i 's/background\ \= \"\#.*/background\ \= \"'$background'\"/g;
	#		s/foreground\ \= \"\#.*/foreground\ \= \"'$foreground'\"/g;
	#		s/frame_color\ \= \"\#.*/frame_color\ \= \"'$foreground'"/g;
	#		s/separator_color\ \= \"#.*/separator_color\ \= \"'$cursor'"\"/g' $notify_file

    [base16_low]
        msg_urgency = low$
        frame_color = "#90a57d"
        background = "#1c1c1c"
        foreground = "#d0d0d0"
    # Low
    sed '/    frame_color.*/{ s/    frame_color.*$/    frame_color = \"'$color2'\"/; :a ; n ; ba}' $notify_file
    sed '/    background.*/{ s/    background.*$/    background = \"'$background'\"/; :a ; n ; ba}' $notify_file
    sed '/    foreground.*/{ s/    foreground.*$/    foreground = \"'$color2'\"/; :a ; n ; ba}' $notify_file
    # Normal
    sed ':a ; N; $! ba ; s/    frame_color.*$/    frame_color = \"'$color2'\"/2' $notify_file
}

gen.qtile ()
{
	. $shell_file

	sed -i 's/color0\ \=\ .*/color0\ \=\ '"'$color0'"'/g;s/color1\ \=\ .*/color1\ \=\ '"'$color1'"'/g;s/color2\ \=\ .*/color2\ \=\ '"'$color2'"'/g;s/color3\ \=\ .*/color3\ \=\ '"'$color3'"'/g;s/color4\ \=\ .*/color4\ \=\ '"'$color4'"'/g;s/color5\ \=\ .*/color5\ \=\ '"'$color5'"'/g;s/color6\ \=\ .*/color6\ \=\ '"'$color6'"'/g;s/color7\ \=\ .*/color7\ \=\ '"'$color7'"'/g;s/color8\ \=\ .*/color8\ \=\ '"'$color8'"'/g;s/color9\ \=\ .*/color9\ \=\ '"'$color9'"'/g;s/color10\ \=\ .*/color10\ \=\ '"'$color10'"'/g;s/color11\ \=\ .*/color11\ \=\ '"'$color11'"'/g;s/color12\ \=\ .*/color12\ \=\ '"'$color12'"'/g;s/color13\ \=\ .*/color13\ \=\ '"'$color13'"'/g;s/color14\ \=\ .*/color14\ \=\ '"'$color14'"'/g;s/color15\ \=\ .*/color15\ \=\ '"'$color15'"'/g;s/background\ \=\ .*/background\ \=\ '"'$background'"'/g;s/selection\_background\ \=\ .*/selection\_background\ \=\ '"'$selection_background'"'/g;s/foreground\ \=\ .*/foreground\ \=\ '"'$foreground'"'/g;s/cursor\ \=\ .*/cursor\ \=\ '"'$cursor'"'/g' $file_theme
}

gen.resource ()
{
	. $shell_file
	sed -i 's/\*background\:\ \#.*/\*background\:\ '$background'/g;
	s/\*foreground\:\ \#.*/\*foreground\:\ '$foreground'/g;
	s/\*color0\:\ \#.*/\*color0\:\ '$color0'/g;
	s/\*color1\:\ \#.*/\*color1\:\ '$color1'/g;
	s/\*color2\:\ \#.*/\*color2\:\ '$color2'/g;
	s/\*color3\:\ \#.*/\*color3\:\ '$color3'/g;
	s/\*color4\:\ \#.*/\*color4\:\ '$color4'/g;
	s/\*color5\:\ \#.*/\*color5\:\ '$color5'/g;
	s/\*color6\:\ \#.*/\*color6\:\ '$color6'/g;
	s/\*color7\:\ \#.*/\*color7\:\ '$color7'/g;
	s/\*color8\:\ \#.*/\*color8\:\ '$color8'/g;
	s/\*color9\:\ \#.*/\*color9\:\ '$color9'/g;
	s/\*color10\:\ \#.*/\*color10\:\ '$color10'/g;
	s/\*color11\:\ \#.*/\*color11\:\ '$color11'/g;
	s/\*color12\:\ \#.*/\*color12\:\ '$color12'/g;
	s/\*color13\:\ \#.*/\*color13\:\ '$color13'/g;
	s/\*color14\:\ \#.*/\*color14\:\ '$color14'/g;
	s/\*color15\:\ \#.*/\*color15\:\ '$color15'/g' $resources_file
}

gen.gtks ()
{
	sed -i 's/gtk\-theme\-name\=\".*\"/gtk\-theme\-name\=\"'$@'\"/g' "$HOME/.gtkrc-2.0.mine"
	sed -i 's/gtk\-theme\-name\=\".*\"/gtk\-theme\-name\=\"'$@'\"/g' "$HOME/.gtkrc-2.0"
	sed -i 's/gtk\-theme\-name\=.*/gtk\-theme\-name\='$@'/g' "$HOME/.config/gtk-3.0/settings.ini"
}

theme.run ()
{
	#wm="${${(s: :)${(f)"$(wmctrl -m)"}[1]}[2]}"
	gen.cores || print -P "%K{red}%F{white}%B Erro ao gerar cores no shell %k%f%b"
	gen.resource || print -P "%K{red}%F{white}%B Erro ao gerar Xresources %k%f%b"
	# gen.tilix || print -P "%K{red}%F{white}%B Erro ao gerar cores pro Tilix %k%f%b"
	gen.kitty || print -P "%K{red}%F{white}%B Erro ao gerar cores pro kitty %k%f%b"
	#gen.notify || print -P "%K{red}%F{white}%B Erro ao gerar cores no dunstrc %k%f%b"
	# gen.gtks || print -P "%K{red}%F{white}%BERRO : gtks não gerados"
	# gen.qtile || print -P "%K{red}%F{white}%BERRO : qtile não gerado"
    gen.html

	print ${base_file} > $path_colors/history

    # redshift -x &>/dev/null &
    
    sleep 0.2
    
    taskbar stop &>/dev/null &&
    
    sleep 0.2
    
    pkill polybar || print -P "%K{red}%F{white}%BERRO : pkill polybar"
    
    pulseaudio-equalizer disable &>/dev/null
    
    [[ $(pidof kitty) ]] && app kitty.reload.colors &>/dev/null
    
    pkill sxhkd &> /dev/null
	
    source ~/.zshrc
    
    $path_dots/bspwmrc &> /dev/null
    
    case $Theme in
        Gruvbox* ) gen.gtks "gruvbox-dark-gtk" ; nitrogen --set-scaled --save "$path_dots/Wallpapers/gruvboxArch.png" ;;
        nord* ) gen.gtks "Nordic-darker" ; nitrogen --set-color=$background --set-centered --save "$path_dots/Wallpapers/Nord-1.png" ;;
        * ) gen.gtks "Mojave-dark-alt" ; app hset ;;
    esac
}

box ()
{
    cd $path_colors/iTerm2-Color-Schemes/kitty
    select theme in *; do
        base_file="$theme"
		Theme=$theme
		cp $kitty_file /tmp/kittyfile
		cp $base_file $kitty_file
		[[ $(pidof kitty) ]] && app kitty.reload.colors
		clear
		palettecolors -f $base_file
		print "Aplicar o tema?"
		select opt in sim não; do
			[[ $opt == "sim" ]] && { theme.run; break } || { cp /tmp/kittyfile $kitty_file; rm /tmp/kittyfile; { [[ $(pidof kitty) ]] && app kitty.reload.colors 2>/dev/null }; cd - ; break }
		done
		break
	done
	printf %b "q|Q - Exit\nEnter|Return - Continue\n =>  "
	read opt
	[[ $opt =~ "q|Q" ]] && { return 0 } || { clear; box }	
}

notify_file="$path_dots/dunst/dunstrc"
shell_file="$path_colors/colors.zsh"
resources_file="$path_colors/.Xresources"
kitty_file="$path_colors/colors-kitty.conf"
file_theme="$path_dots/qtile/theme.py"
box
cd -
