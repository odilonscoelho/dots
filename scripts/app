#!/bin/zsh

info.node ()
{
    if [[ ! $@ =~ '[[:digit:]]' ]]; then
        if [[ $(grep -E "$@" /tmp/taskbar |wc -l) -gt 1 ]]; then
            id=$(grep -E "$@" /tmp/taskbar |sed -n '1p' |cut -d ' ' -f 2)
            base=`bspc query -n $id -T |sed 's/{\|}\|"//g;s/,y/ y/g;s/,/\n/g;s/constraints:\|client://g;s/x://g;s/ y:/x/g'`
        else
            base=`bspc query -n "${${(s: :)$(grep -E "$@" /tmp/taskbar)}[2]}" -T |sed 's/{\|}\|"//g;s/,y/ y/g;s/,/\n/g;s/constraints:\|client://g;s/x://g;s/ y:/x/g'`
        fi
    else
        base=`bspc query -n "${${(s: :)$(sed -n $@'p' /tmp/taskbar)}[2]}" -T |sed 's/{\|}\|"//g;s/,y/ y/g;s/,/\n/g;s/constraints:\|client://g;s/x://g;s/ y:/x/g'`
    fi
    
    declare -xA info
    for i in ${(f)base}
        info[${${(s#:#)i}[1]}]=${${(s#:#)i}[2]}
}

info.node.keys ()
{
    # mostra as chaves do array
    info.node $@    
    print ${(k)info}
}

paste () #
{
	xclip -selection clipboard -o
}

pastex () #
{
	xclip -o
}

csgo ()
{
	nohup steam steam://rungameid/730 /dev/null &> /dev/null &
}

print.full ()
{
	
	if [[ -n $1  ]];then
		import -window root -screen "$HOME/Pictures/$@.jpg"
		sleep 0.25
        dunstify -t 5000 -I "$HOME/Pictures/$@.jpg" "Print :" "~/Pictures/$@.jpg"
		sleep 0.25
		import -quality 100 -window root "$HOME/Pictures/$@.jpg"	
        xclip -selection clipboard -t image/png "$HOME/Pictures/$@.jpg"
	else
		
		var="$(date +%H%M%S).jpg"
		import -quality 100 -window root "$HOME/Pictures/$var"
		sleep 0.25
        dunstify -t 5000 -I "$HOME/Pictures/$var" "Print :" "~/Pictures/$var"
		sleep 0.25
		import -quality 100 -window root "$HOME/Pictures/$var"
        xclip -selection clipboard -t image/png "$HOME/Pictures/$var"
	fi
}

print.cut ()
{
	file="$HOME/Pictures/$(yad --entry --title="screenshot =...")"
	import $file
    dunstify -t 5000 -i $file "Screenshot" "Saved in ~/Pictures"
    xclip -selection clipboard -t image/png "$HOME/Pictures/$file"
}

kitty.reload.colors ()
{
	kitty @set-colors --all --configured ~/.config/kitty/kitty.conf
}

hset ()
{
    # o hset precisa da cor com letras maiÃºsculas por isso a flag (U), use ${background^^} para o bash :
    hsetroot -solid ${(U)background}
}

mpv ()
{
	[[ -z $@ ]] && \
		{ nohup mpv --no-config "$(paste)" &>/dev/null & } || \
			{ nohup mpv --no-config "$@" &>/dev/null & }
}

$@

