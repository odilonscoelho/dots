#!/bin/zsh

music () #
{
	youtube-dl -c -x --audio-quality 0 "$line" --console-title "$url"
}

url () #
{
	youtube-dl --get-filename "$line" | read outputFile
	youtube-dl -f 'best' --console-title --continue --limit-rate ${limit}K "$url"
	touch -m "$outputFile"
}

file () #
{
	while read line; do
		youtube-dl --get-filename "$line" | read outputFile
		youtube-dl -f 'best' -c "$line" --limit "${limit}K" --console-title --continue
		sleep 1
		print -P "%K{green}%B Alterando timestamp de $outputFile %k%b"
		touch -m "$outputFile"
		sleep 1
	done < $file
}

help () #
{
	<<- doc
	`tput setaf 1; tput bold`Use:`tput sgr0`

	`tput setaf 2; tput bold`downloads [ -file <file> | -url <url> | -music <url> | -xclip ] -limit <Limit-Rate KB/s> `tput sgr0`

	-limit <limit-rate> KB/s
	-music <url>
	-url <url>
	-file <file>
	-xclip

	`tput bold`opções`tput sgr0`
	url = para baixar url (sem tratativas áudio/vídeo no formato padrão)
	file = para baixar a partir de um arquivo com uma lista de urls, uma por linha
	music = para extrair o audio das urls de vídeos
	xclip = para baixar a partir da url copiada para área de transferencia (requer xclip)
	doc
}
# limit-rate default
limit=1024

. allopts -help! -xclip! -limit: -file: -url: -music: $@

for i in $@
{
	[[ "$ARGREFUSED" =~ "$i" ]] && shift
}

for x in $ARGUMENTOS[@] 
{  
	case $x in
		$ARGUMENTOS[limit] ) limit=$x ;;
		$ARGUMENTOS[file] ) file=$x; cmd=file ;;
		$ARGUMENTOS[url] ) url=$x; cmd=url ;;
		$ARGUMENTOS[music] ) url=$x; cmd=music ;;
		$ARGUMENTOS[xclip] ) cmd=url ;;
		$ARGUMENTOS[help] ) cmd=$x ;;
	esac
}

if [[ -z $url && -n $file && -z $xclip ]]; then
	print "Baixando a partir de $file"
elif [[ -z i$file && -n $url && -z $xclip ]]; then
	print "Baixando a partir de $url"
elif [[ -z $file && -z $url && -n $ARGUMENTOS[xclip] ]]; then
	url="$(xclip -selection clipboard -o)"
	print "Baixando a partir de $xclip"
else
	<<- doc

	`tput bold; tput setaf 1`Opção inválida!`tput sgr0`
	Pelo menos uma das opções "-file | -url | -xclip" deve ser informada
	Não aceita multiplas opções!
	
	doc
	help
	exit 1
fi

"${cmd}"
